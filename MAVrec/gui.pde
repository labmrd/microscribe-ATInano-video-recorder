/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void buttonRECORD_click1(GButton source, GEvent event) { //_CODE_:buttonRECORD:211502:
  //println("button1 - GButton >> GEvent." + event + " @ " + millis());
  if( amReady && !amRecording && beginRecording()) {
    
    buttonRECORD.setText("STOP");
    println("started recording...");
  } else if ( amRecording ) {
    amRecording = false;
    stopRecording();
    buttonRECORD.setText("RECORD");
    println("stopped recording");
  }  else {
    println("Cannot record until system is initialized and ready");
  }
  
    
} //_CODE_:buttonRECORD:211502:

public void textarea3_change1(GTextArea source, GEvent event) { //_CODE_:textareaNotes:235989:
  println("textarea3 - GTextArea >> GEvent." + event + " @ " + millis());
  println(textareaNotes.getText());
} //_CODE_:textareaNotes:235989:

public void textfieldFilename_change1(GTextField source, GEvent event) { //_CODE_:textfieldFilename:372857:
  //println("textfieldFilename - GTextField >> GEvent." + event + " @ " + millis());
  println("New Text" + source.getText());
  fileStub = source.getText();
  fileName = fileStub +"_"+getTimestamp();
} //_CODE_:textfieldFilename:372857:

public void buttonTare_click1(GButton source, GEvent event) { //_CODE_:buttonTare:588681:
  //println("buttonCamSettings - GButton >> GEvent." + event + " @ " + millis());
  println(" TARE-ing forces+torques.");
  tareATIreadings();
} //_CODE_:buttonTare:588681:

public void buttonDataFolder_click1(GButton source, GEvent event) { //_CODE_:buttonDataFolder:546437:
  //println("buttonDataFolder - GButton >> GEvent." + event + " @ " + millis());
  println("Opening data storage folder: " + fileFolder);
  //System.Diagnostics.Process.Start( fileFolder );
  //String cmd = "explorer.exe " + fileFolder;
  //cmd = "explorer.exe C:\\temp";
  //cmd = cmd.replace("/","\\\\");
  //println("Running cmd: " + cmd);
  //println( launch(cmd) );
  
  String myFolder = fileFolder;
  myFolder = fileFolder.replace("/", "\\");
  exec("explorer.exe", myFolder) ;
  
  
} //_CODE_:buttonDataFolder:546437:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.CYAN_SCHEME);
  G4P.setMouseOverEnabled(false);
  GButton.useRoundCorners(false);
  G4P.setDisplayFont("Arial", G4P.BOLD, 18);
  G4P.setInputFont("Arial", G4P.PLAIN, 16);
  surface.setTitle("Sketch Window");
  buttonRECORD = new GButton(this, 490, 10, 280, 70);
  buttonRECORD.setText("RECORD");
  buttonRECORD.addEventHandler(this, "buttonRECORD_click1");
  textareaNotes = new GTextArea(this, 490, 90, 278, 170, G4P.SCROLLBARS_VERTICAL_ONLY | G4P.SCROLLBARS_AUTOHIDE);
  textareaNotes.setPromptText("Enter notes here (any text in this box will be saved to the same filename set)");
  textareaNotes.setOpaque(true);
  textareaNotes.addEventHandler(this, "textarea3_change1");
  labelFilename = new GLabel(this, 10, 20, 90, 30);
  labelFilename.setText("Filename:");
  labelFilename.setOpaque(false);
  textfieldFilename = new GTextField(this, 10, 50, 440, 27, G4P.SCROLLBARS_NONE);
  textfieldFilename.setText("Testfile.StudyXX.SubjectYY.runZZ");
  textfieldFilename.setPromptText("Enter Filename Stub Here");
  textfieldFilename.setOpaque(true);
  textfieldFilename.addEventHandler(this, "textfieldFilename_change1");
  buttonTare = new GButton(this, 490, 270, 280, 20);
  buttonTare.setText("tare forces");
  buttonTare.addEventHandler(this, "buttonTare_click1");
  label1 = new GLabel(this, 10, 420, 210, 20);
  label1.setText("Video1");
  label1.setOpaque(true);
  label2 = new GLabel(this, 230, 420, 210, 20);
  label2.setText("Video2");
  label2.setOpaque(true);
  buttonDataFolder = new GButton(this, 491, 301, 278, 36);
  buttonDataFolder.setText("open data folder");
  buttonDataFolder.addEventHandler(this, "buttonDataFolder_click1");
  label3 = new GLabel(this, 490, 420, 280, 140);
  label3.setText("NOTE: to change program defaults like whether to use MicroScribe (motion capture), ATI Nano 17 (force/torque capture), which video sources (if any), or file name and save locations, edit the top of MAVrec.pde");
  label3.setOpaque(false);
  labelVideo1source = new GLabel(this, 10, 440, 210, 20);
  labelVideo1source.setText("none");
  labelVideo1source.setOpaque(false);
  labelVideo2source = new GLabel(this, 230, 440, 210, 20);
  labelVideo2source.setTextAlign(GAlign.LEFT, GAlign.CENTER);
  labelVideo2source.setText("none");
  labelVideo2source.setOpaque(false);
}

// Variable declarations 
// autogenerated do not edit
GButton buttonRECORD; 
GTextArea textareaNotes; 
GLabel labelFilename; 
GTextField textfieldFilename; 
GButton buttonTare; 
GLabel label1; 
GLabel label2; 
GButton buttonDataFolder; 
GLabel label3; 
GLabel labelVideo1source; 
GLabel labelVideo2source; 
