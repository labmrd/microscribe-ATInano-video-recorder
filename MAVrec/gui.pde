/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void buttonRECORD_click1(GButton source, GEvent event) { //_CODE_:buttonRECORD:211502:
  //println("button1 - GButton >> GEvent." + event + " @ " + millis());
  if( amReady && !amRecording && beginRecording()) {
    
    buttonRECORD.setText("STOP");
    println("started recording...");
  } else if ( amRecording ) {
    amRecording = false;
    stopRecording();
    buttonRECORD.setText("RECORD");
    println("stopped recording");
  }  else {
    println("Cannot record until system is initialized and ready");
  }
  
    
} //_CODE_:buttonRECORD:211502:

public void textarea3_change1(GTextArea source, GEvent event) { //_CODE_:textareaNotes:235989:
  println("textarea3 - GTextArea >> GEvent." + event + " @ " + millis());
  println(textareaNotes.getText());
} //_CODE_:textareaNotes:235989:

public void textfieldFilename_change1(GTextField source, GEvent event) { //_CODE_:textfieldFilename:372857:
  //println("textfieldFilename - GTextField >> GEvent." + event + " @ " + millis());
  println("New Text" + source.getText());
  fileStub = source.getText();
  fileName = fileStub +"_"+getTimestamp();
} //_CODE_:textfieldFilename:372857:

public void buttonTare_click1(GButton source, GEvent event) { //_CODE_:buttonTare:588681:
  println("buttonCamSettings - GButton >> GEvent." + event + " @ " + millis());
  
} //_CODE_:buttonTare:588681:

public void dropListCam1_click1(GDropList source, GEvent event) { //_CODE_:dropListCam1:332469:
  //println("Camera1 - GDropList >> GEvent." + event + " @ " + millis());
  //println("Setting Camera 1 Index to:" + source.getSelectedIndex());
    
  vid1Selection =  source.getSelectedIndex();
  if ( vid1Selection == 0 ) {
    numCameras = 0;
    vid2Selection = 0;
    vid1 = null; 
    println("Removing ALL cameras;     Always select Video1 source first.");
  } else 
  {
    println("Attaching Video1 Camera to selection # " + source.getSelectedIndex() );
    vid1 = new Capture(this, cameras[ vid1Selection - 1 ]  );
    vid1.stop();
    vid1.start();
    if (numCameras == 0) numCameras++;
  }  
  
} //_CODE_:dropListCam1:332469:

public void dropList1Cam2_click(GDropList source, GEvent event) { //_CODE_:dropListCam2:953794:
 // println("dropListCam2 - GDropList >> GEvent." + event + " @ " + millis());
 //
  if ( source.getSelectedIndex() == 0 ) 
  {
    vid2 = null; 
    println("Removing Video2 source.");
    if( numCameras == 2) numCameras--;
  } else if( source.getSelectedIndex() == vid1Selection )
  {
    println("Cannot choose the same source as Video1, Video1 takes priority");
  } else 
  {
    println("Attaching Video2 Camera to selection # " + source.getSelectedIndex() ); 
    vid2Selection =  source.getSelectedIndex();
    vid2 = new Capture(this, cameras[ vid2Selection - 1 ]  );
    vid2.stop();
    vid2.start();
    if (numCameras == 1) numCameras++;
  }  
} //_CODE_:dropListCam2:953794:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  GButton.useRoundCorners(false);
  G4P.setDisplayFont("Arial", G4P.BOLD, 18);
  G4P.setInputFont("Arial", G4P.PLAIN, 16);
  surface.setTitle("Sketch Window");
  buttonRECORD = new GButton(this, 490, 10, 280, 70);
  buttonRECORD.setText("RECORD");
  buttonRECORD.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  buttonRECORD.addEventHandler(this, "buttonRECORD_click1");
  textareaNotes = new GTextArea(this, 490, 90, 278, 170, G4P.SCROLLBARS_VERTICAL_ONLY | G4P.SCROLLBARS_AUTOHIDE);
  textareaNotes.setPromptText("Enter notes here (any text in this box will be saved to the same filename set)");
  textareaNotes.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  textareaNotes.setOpaque(true);
  textareaNotes.addEventHandler(this, "textarea3_change1");
  labelFilename = new GLabel(this, 10, 20, 90, 30);
  labelFilename.setText("Filename:");
  labelFilename.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  labelFilename.setOpaque(false);
  textfieldFilename = new GTextField(this, 10, 50, 440, 27, G4P.SCROLLBARS_NONE);
  textfieldFilename.setText("Testfile.StudyXX.SubjectYY.runZZ");
  textfieldFilename.setPromptText("Enter Filename Stub Here");
  textfieldFilename.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  textfieldFilename.setOpaque(true);
  textfieldFilename.addEventHandler(this, "textfieldFilename_change1");
  buttonTare = new GButton(this, 490, 270, 280, 20);
  buttonTare.setText("tare forces");
  buttonTare.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  buttonTare.addEventHandler(this, "buttonTare_click1");
  togGroup1 = new GToggleGroup();
  dropListCam1 = new GDropList(this, 10, 420, 210, 100, 4, 20);
  dropListCam1.setItems(loadStrings("list_332469"), 1);
  dropListCam1.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  dropListCam1.addEventHandler(this, "dropListCam1_click1");
  dropListCam2 = new GDropList(this, 230, 420, 210, 100, 4, 20);
  dropListCam2.setItems(loadStrings("list_953794"), 0);
  dropListCam2.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  dropListCam2.addEventHandler(this, "dropList1Cam2_click");
  label1 = new GLabel(this, 10, 440, 200, 20);
  label1.setText("Video1");
  label1.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  label1.setOpaque(false);
  label2 = new GLabel(this, 230, 440, 200, 20);
  label2.setText("Video2");
  label2.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  label2.setOpaque(false);
}

// Variable declarations 
// autogenerated do not edit
GButton buttonRECORD; 
GTextArea textareaNotes; 
GLabel labelFilename; 
GTextField textfieldFilename; 
GButton buttonTare; 
GToggleGroup togGroup1; 
GDropList dropListCam1; 
GDropList dropListCam2; 
GLabel label1; 
GLabel label2; 
